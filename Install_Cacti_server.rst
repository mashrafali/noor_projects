{{{
Author       : Amr Mohsen &Ahmed Shehata & Ayman Tohamy
Version      : 2.0
Creation date: 2012-07-12
Latest update: 2013-11-13
}}}
<<TableOfContents(7)>>

= Install cacti Server =
'''Install Ubuntu server 12.4 64 bit then Open the terminal and connect the cacti server:'''

== update and upgrade the system ==
{{{
sudo apt-get update
sudo apt-get upgrade
}}}
== install pre-request package of cacti installation ==
{{{
sudo apt-get install snmpd snmp mysql-server apache2 libapache2-mod-php5 php5-mysql php5-cli php5-snmp rsync iptables
}}}
== Optional secure MySQL ==
type :

{{{
 mysql_secure_installation
}}}
press Enter

Enter current password for root (enter for none): insert mysql password

{{{
Change the root password? [Y/n]
press n
}}}
{{{
Remove anonymous users? [Y/n]
press y
}}}
{{{
Disallow root login remotely? [Y/n]
press y
}}}
{{{
Remove test database and access to it? [Y/n]
press y
}}}
{{{
Reload privilege tables now? [Y/n]
press y
}}}
== install lynx to test site ==
package to test the installation from the terminal

{{{
apt-get install lynx
}}}
== How to install iptables ==
=== Install Package ===
{{{
sudo apt-get install iptables
}}}
=== add iptables rule ===
{{{
sudo touch /var/iptables
sudo vi /var/iptables
}}}
add this rules :

{{{
# Generated by iptables-save v1.4.10 on Mon May 14 15:32:47 2012
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [249:551748]
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -s 217.139.224.0/24 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -j DROP
-A INPUT -p tcp -m tcp --dport 80 -j LOG --log-prefix "iptables accept: "
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -s 217.139.224.0/24 -p tcp -m tcp --dport 22 -j LOG --log-prefix "iptables accept: "
-A INPUT -s 217.139.224.0/24 -p tcp -m tcp --dport 22 -j ACCEPT
iptables -I INPUT -s 41.187.101.0/24 -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j LOG --log-prefix "iptables accept: "
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -j LOG --log-prefix "iptables Drop: "
-A INPUT -j DROP
COMMIT
# Completed on Mon May 14 15:32:47 2012
}}}
'''__another IP Table rule__'''

{{{
# vi /var/iptables-rule
}}}
{{{
# Generated by iptables-save v1.4.12 on Wed Dec 12 16:33:42 2012
*filter
:INPUT ACCEPT [18:1404]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [52:6244]
-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
-A INPUT -s 217.139.224.0/24 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp -m tcp --dport 123 -j ACCEPT
-A INPUT -p tcp -m tcp --sport 123 -j ACCEPT
COMMIT
# Completed on Wed Dec 12 16:33:42 2012
}}}
=== Configure network card with iptables rule ===
{{{
sudo vi /etc/network/interfaces
}}}
add this line

{{{
pre-up iptables-restore < /var/iptables-rule
}}}
{{{
# The primary network interface
auto eth0
iface eth0 inet static
        address 217.139.0.68
        netmask 255.255.255.248
        gateway 217.139.0.67
        dns-search noor.net
        pre-up  iptables-restore < /var/iptables-rule

#The secondary interface
auto eth1
iface eth1 inet static
        address 172.17.14.2
        netmask 255.255.255.252
        pre-up iptables-restore < /var/iptables-rule

#static route to reach NOOR PE's
up route add -net 217.139.253.0/24 gw 172.17.14.2 dev eth1
up route add -net 10.241.0.0/16 gw 172.17.14.2 dev eth1
up route add -net 10.240.0.0/16 gw 172.17.14.2 dev eth1
}}}
=== Check iptables rules ===
{{{
sudo iptables -L
}}}
== Install cacti-spine ==
=== Install cacti Package ===
{{{
sudo apt-get install cacti-spine
}}}
- Use apache2 - Enter MySQL Password - Enter Cacti password

=== test the installation by lynx ===
{{{
Type lynx localhost/cacti
}}}
press enter

= Backup and Restore cacti =
== Backup Cacti database ==
{{{
mysqldump -u root -p cacti > cacti.dump
}}}
== Restore the cacti database ==
steps to restore the cacti database

=== 1- Drop database ===
{{{
mysql -u root â€“p
}}}
insert the password

{{{
drop database cacti;
}}}
quit the MySQL

{{{
type \q
}}}
=== 2- create a cacti database ===
we need to create a cacti database

{{{
mysql -u root -p -e 'create database cacti'
}}}
or

{{{
mysql> create database cacti;
}}}
=== 3- Create cactiuser and cacti group ===
Create cactiuser and cacti group

{{{
sudo groupadd cacti
sudo useradd -g cacti cactiuser
}}}
put a password for cactiuser

{{{
passwd cactiuser
}}}
=== 4- Grant cactiuser on cacti database ===
connect to mysql to put a grant to cactiuser on cacti database

{{{
mysql -u root -p
grant all on cacti.* to cactiuser@localhost identified by 'cactiuser';
flush privileges;
exit
}}}
=== 5- restore backuped database ===
{{{
mysql -u root --password=PASSWORD cacti < /cacti.dump
}}}
== Backup and Restore rra folder ==
'''rra : Folder contains graphs files'''

{{{
 sudo scp  /var/lib/cacti/rra [destination]
}}}
if you need to restore rra

{{{
sudo cp -r destinationa/rra /var/lib/cacti/rra
}}}
please change the permission

{{{
chown -R www-data:www-data /var/lib/cacti/rra
}}}
= Install cacti replication server (cacti-backup) =
== Build Production cacti server ==
=== Bulid Cacti server ===
 . Bulid production server as mentioned above and below network configurations:

{{{
auto eth0
iface eth0 inet static
        address 217.139.0.68
        netmask 255.255.255.248
        gateway 217.139.0.67
        dns-search noor.net
        pre-up  iptables-restore < /var/iptables-rule

#The secondary interface
auto eth1
iface eth1 inet static
        address 172.17.14.2
        netmask 255.255.255.252
        pre-up iptables-restore < /var/iptables-rule
}}}
{{{
#static route
up route add -net 217.139.253.0/24 gw 172.17.14.2 dev eth1
up route add -net 10.241.0.0/16 gw 172.17.14.2 dev eth1
up route add -net 10.240.0.0/16 gw 172.17.14.2 dev eth1
}}}
=== Add Script at source server ===
==== create replication/database script ====
 1. Create script to backup database and rra <<BR>>
 {{{
:~# vi  /usr/bin/mirror-with-backup.sh
}}}
 <<BR>>

{{{
#SOURCE
#script to send latest rra files and database to cacti bkp at host 172.17.13.7 on Esxi 41.187.100.108

sudo rsync -avz /var/lib/cacti/rra/*
date=$(date +"%m_%d_%Y")
mysqldump -u root  --password=PASSWORD cacti > /home/ashehata/cacti.dump_$date
rsync -avz /home/ashehata/cacti.dump_$date
rm /home/ashehata/cacti.dump_$date
}}}
 1. <<BR>>make script excutable
 {{{
 chmod +x /usr/bin/mirror-with-backup.sh
}}}

==== Copy rsa public key from cati to cati-backup server ====
 1. Copy public key to Cacti-backup server in ordder not to ask you about password while copying data

 1. {{{
 scp ~/.ssh/id_rsa.pub root@172.17.13.56:/tmp/
}}}
 1. Insert public key to cacti-back server auth keys, before insert key , check created rsa installed at cacti-backup server<<BR>><<BR>><<BR>><<BR>>
 {{{
[root@cacti-backup ~]# cat ~/.ssh/id_rsa.pub
            /root/.ssh/id_rsa.pub: No such file or directory
}}}
 Create rsa at cacti-backup if rsa not exist as above

 1. {{{
    [root@cacti-backup ~]# ssh-keygen -t rsa
    Just press the enter key (without pass phrase)
}}}
 Authorized cacti rsa into cacti-backup:<<BR>><<BR>><<BR>>
 {{{
[root@cacti-backup ~]# cat /tmp/id_rsa.pub >>~/.ssh/authorized_keys
[root@cacti-backup ~]# chmod 700 ~/.ssh/authorized_keys
}}}

==== Schedule script ====
 . {{{
crontab -e
}}}
 {{{
00 1 * * *      mirror-with-backup.sh
}}}

== Build cacti Backup server ==
=== Bulid Cacti-backup server ===
 . Bulid cacti-backup  server as mentioned above and below network configurations:

{{{
auto eth0
iface eth0 inet static
        address 172.17.13.7
        netmask 255.255.255.0
        gateway 172.17.13.1
        pre-up iptables-restore < /var/iptables-rule
#       address 41.187.101.78
#       netmask 255.255.255.248
#       gateway 41.187.101.73

auto eth1
iface eth1 inet static
        address 172.17.14.38
        netmask 255.255.255.252
        pre-up iptables-restore < /var/iptables-rule
#static route
up route add -net 217.139.253.0/24 gw 172.17.14.38 dev eth1
}}}
=== Add Script at destination server ===
==== create replication/database script ====
 1. Create script to restore Database and rra and fix permission at cacti-backup server<<BR>>
 {{{
:~# vi  /usr/bin/cacti-bkb-dst.sh
}}}
 <<BR>>

{{{#!/bin/bash
#Author: Amr Mohsen
#DISTINATION
#script to fix permission and restore the dump from cacti-64 on host 217.139.0.68 on 41.187.100.102
date=$(date +"%m_%d_%Y")
sudo chown -R www-data:www-data /var/lib/cacti/rra
sudo mysql -u root --password=PASSWORD cacti < /cacti/cacti.dump_$date
sudo /etc/init.d/snmpd restart
sudo /etc/init.d/mysql restart
sudo /etc/init.d/apache2 restart
sudo /etc/init.d/cron restart
sudo /etc/init.d/apache2 restart
}}}
<<BR>>make script excutable

{{{
 chmod +x  /usr/bin/cacti-bkb-dst.sh
}}}
==== Schedule script ====
 . {{{
crontab -e
}}}
 {{{
*/5 * * * * www-data php /usr/share/cacti/site/poller.php >/dev/null 2>/var/log/cacti/poller-error.log
00 2 * * * root        /usr/bin/cacti-bkb-dst.sh
}}}

= Backup cacti-backup database to DC backup server =
== Add Script at cacti-backup server ==
=== create backup database script ===
 1. Create script to backup dump database <<BR>>
 {{{
:~# vi /usr/bin/backup-to-server.sh
}}}
 <<BR>>

{{{
#to move backup database to 172.17.13.56 server

scp /cacti/cacti.dump_* root@172.17.13.56:/Backup/Datacenter/Cacti-bkb/
rm -rf /cacti/cacti.dump_*
}}}
 1. <<BR>>make script excutable
 {{{
 chmod +x /usr/bin/backup-to-server.sh
}}}

=== Copy rsa public key from cati-backup to backup-dc server ===
 1. Copy public key to Cacti-backup server in ordder not to ask you about password while copying data

 1. {{{
 scp ~/.ssh/id_rsa.pub root@172.17.13.56:/tmp/
}}}
 1. Insert public key to cacti-back server auth keys, before insert key , check created rsa installed at cacti-backup server<<BR>><<BR>><<BR>><<BR>>
 {{{
[root@backup-dc ~]# cat ~/.ssh/id_rsa.pub
            /root/.ssh/id_rsa.pub: No such file or directory
}}}
 Create rsa at cacti-backup if rsa not exist as above

 1. {{{
    [root@backup-dc ~]# ssh-keygen -t rsa
    Just press the enter key (without pass phrase)
}}}
 Authorized cacti rsa into cacti-backup:<<BR>><<BR>><<BR>>
 {{{
[root@backup-dc ~]# cat /tmp/id_rsa.pub >>~/.ssh/authorized_keys
[root@backup-dc ~]# chmod 700 ~/.ssh/authorized_keys
}}}

=== Schedule script ===
 . {{{
crontab -e
}}}
 {{{
00 23 * * *     /usr/bin/backup-to-server.sh
}}}
